---
const { collection } = Astro.props;

export async function createCollection() {
  const remoteData = await fetch('https://api.jikan.moe/v3/top/anime/1')
  const remoteJson = await remoteData.json();
  const allData = remoteJson.top;

  console.log('load data ðŸ’¯');
  
  return {
    route: `/show/:id`,
    paths() {
      return allData.map((letter) => {
        const id = letter.mal_id;
        return {params: {id}};
      })
    },
    async props({ params }) {
      let show = allData.filter((item) => item.mal_id === params.id);
      const episodes = await fetch(`https://api.jikan.moe/v3/anime/${params.id}/episodes`).then(response => response.json());
      show[0] = {...show[0], ...{episodes: episodes.episodes}};
      return {
        id: params.id,
        item: show,
      }
    },
  };
}
const {id, item} = Astro.props;
---
<html lang="en">
  <head>
  <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Anime show: </title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="stylesheet" href="/style/global.css">
    <link rel="stylesheet" href="/style/home.css">
    <style lang="scss">
    .container {
        margin: 4rem;
        display: grid;
         @media (max-width: 650px) {
          margin: 2rem;
        }
    }
    a, p {
        margin-bottom: 0.5rem;
    }
    h1 {
        margin-bottom: 1rem;
    }
    </style>
  </head>
  <body>
    <div class="container">
        <a href="/">&larr; Go back</a>
        <h1>{item[0].title}</h1>
        <p>These are all episodes for this show:</p>
        <ul class="list">
            {item[0].episodes.map((item) => <li>{item.episode_id} - {item.title}</li>)}
        </ul>
     </div>
  </body>
</html>
